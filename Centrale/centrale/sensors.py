from serial import Serial, SerialException
from serial.tools import list_ports
from datetime import datetime
import graph as g
import threading

class Sensor():
    def __init__(self, comport, index):
        self.serial = Serial(comport, 19200)
        self.serial.close()
        self.port = comport
        self.name = self.get_name(index)
        self.log_file_path = "Centrale/logs/" + self.name + datetime.now().strftime("%d-%m-%Y") + ".txt"
        # self.log_file_path = "../logs/" + self.name + datetime.now().strftime("%d-%m-%Y") + ".txt"
        self.graph = g.Graph(self.log_file_path)
        log_file = open(self.log_file_path, "w+")
        log_file.write("# WARNING: DO NOT EDIT THIS FILE!\n")
        log_file.write("# File created: " + datetime.now().strftime("%d-%m-%Y %H:%M:%S") + "\n")
        log_file.write("# Log file for " + self.name + "\n")
        log_file.write("# Time,Value\n")
        log_file.close()
        self.thread = threading.Thread(target=self.log, name=self.name + "Thread")
        self.thread.start()

    def get_name(self, index):
        sensor_name = "Sensor" + str(index) + "_"
        while True:
            self.serial.open()
            response = self.serial.read_until()
            self.serial.close()
            response = response.decode("utf-8")
            sensor_type = response.split(":")[0]
            if sensor_type== "_TEMP":
                self.sensor_type = sensor_type
                sensor_name += "Temperatuursensor"
                break
            elif sensor_type == "_LGHT":
                self.sensor_type = sensor_type
                sensor_name += "Lichtsensor"
                break
        return sensor_name
            
    def log(self):
        self.serial.open()
        while True:
            try: 
                response = self.serial.readline()
                response = response.decode("utf-8")
                sensor_type, value = response.split(":")
                value = int(value)
                if sensor_type == self.sensor_type:
                    with open (self.log_file_path, "a") as f:
                        f.write(datetime.now().strftime("%H:%M:%S") + "," + str(value) + '\n')
            except ValueError:
                pass
            except SerialException:
                pass
        self.serial.close()
