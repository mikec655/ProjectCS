
Aansturing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000412  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000039e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  00800100  00800100  00000412  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000412  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000444  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000484  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d80  00000000  00000000  00000574  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008f2  00000000  00000000  000012f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006c3  00000000  00000000  00001be6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000028c  00000000  00000000  000022ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e2  00000000  00000000  00002538  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004aa  00000000  00000000  00002b1a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00002fc4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 35 01 	jmp	0x26a	; 0x26a <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 b1 00 	jmp	0x162	; 0x162 <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 16 01 	jmp	0x22c	; 0x22c <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e9       	ldi	r30, 0x9E	; 158
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 32       	cpi	r26, 0x28	; 40
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 8f 01 	call	0x31e	; 0x31e <main>
  9e:	0c 94 cd 01 	jmp	0x39a	; 0x39a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <turn_on_red_led>:
}

void stop_motor(void)
{
    //zorgt er voor dat motor stopt met draaien
    PORTB &= 0b11111100; 
  a6:	2c 9a       	sbi	0x05, 4	; 5
  a8:	08 95       	ret

000000aa <turn_off_red_led>:
  aa:	2c 98       	cbi	0x05, 4	; 5
  ac:	08 95       	ret

000000ae <scheduler_add_task>:
  ae:	0f 93       	push	r16
  b0:	1f 93       	push	r17
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	8c 01       	movw	r16, r24
  b8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <scheduler_tasks>
  bc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <scheduler_tasks+0x1>
  c0:	89 2b       	or	r24, r25
  c2:	81 f0       	breq	.+32     	; 0xe4 <scheduler_add_task+0x36>
  c4:	e4 e0       	ldi	r30, 0x04	; 4
  c6:	f1 e0       	ldi	r31, 0x01	; 1
  c8:	21 e0       	ldi	r18, 0x01	; 1
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	82 2f       	mov	r24, r18
  ce:	e9 01       	movw	r28, r18
  d0:	a7 81       	ldd	r26, Z+7	; 0x07
  d2:	b0 85       	ldd	r27, Z+8	; 0x08
  d4:	2f 5f       	subi	r18, 0xFF	; 255
  d6:	3f 4f       	sbci	r19, 0xFF	; 255
  d8:	37 96       	adiw	r30, 0x07	; 7
  da:	ab 2b       	or	r26, r27
  dc:	b9 f7       	brne	.-18     	; 0xcc <scheduler_add_task+0x1e>
  de:	85 30       	cpi	r24, 0x05	; 5
  e0:	21 f4       	brne	.+8      	; 0xea <scheduler_add_task+0x3c>
  e2:	15 c0       	rjmp	.+42     	; 0x10e <scheduler_add_task+0x60>
  e4:	c0 e0       	ldi	r28, 0x00	; 0
  e6:	d0 e0       	ldi	r29, 0x00	; 0
  e8:	80 e0       	ldi	r24, 0x00	; 0
  ea:	fe 01       	movw	r30, r28
  ec:	ee 0f       	add	r30, r30
  ee:	ff 1f       	adc	r31, r31
  f0:	ee 0f       	add	r30, r30
  f2:	ff 1f       	adc	r31, r31
  f4:	ee 0f       	add	r30, r30
  f6:	ff 1f       	adc	r31, r31
  f8:	ec 1b       	sub	r30, r28
  fa:	fd 0b       	sbc	r31, r29
  fc:	ec 5f       	subi	r30, 0xFC	; 252
  fe:	fe 4f       	sbci	r31, 0xFE	; 254
 100:	11 83       	std	Z+1, r17	; 0x01
 102:	00 83       	st	Z, r16
 104:	73 83       	std	Z+3, r23	; 0x03
 106:	62 83       	std	Z+2, r22	; 0x02
 108:	55 83       	std	Z+5, r21	; 0x05
 10a:	44 83       	std	Z+4, r20	; 0x04
 10c:	16 82       	std	Z+6, r1	; 0x06
 10e:	df 91       	pop	r29
 110:	cf 91       	pop	r28
 112:	1f 91       	pop	r17
 114:	0f 91       	pop	r16
 116:	08 95       	ret

00000118 <scheduler_delete_task>:
 118:	27 e0       	ldi	r18, 0x07	; 7
 11a:	82 9f       	mul	r24, r18
 11c:	c0 01       	movw	r24, r0
 11e:	11 24       	eor	r1, r1
 120:	fc 01       	movw	r30, r24
 122:	ec 5f       	subi	r30, 0xFC	; 252
 124:	fe 4f       	sbci	r31, 0xFE	; 254
 126:	11 82       	std	Z+1, r1	; 0x01
 128:	10 82       	st	Z, r1
 12a:	13 82       	std	Z+3, r1	; 0x03
 12c:	12 82       	std	Z+2, r1	; 0x02
 12e:	15 82       	std	Z+5, r1	; 0x05
 130:	14 82       	std	Z+4, r1	; 0x04
 132:	16 82       	std	Z+6, r1	; 0x06
 134:	08 95       	ret

00000136 <scheduler_init_timer1>:
 136:	cf 93       	push	r28
 138:	c0 e0       	ldi	r28, 0x00	; 0
 13a:	8c 2f       	mov	r24, r28
 13c:	0e 94 8c 00 	call	0x118	; 0x118 <scheduler_delete_task>
 140:	cf 5f       	subi	r28, 0xFF	; 255
 142:	c5 30       	cpi	r28, 0x05	; 5
 144:	d1 f7       	brne	.-12     	; 0x13a <scheduler_init_timer1+0x4>
 146:	81 e7       	ldi	r24, 0x71	; 113
 148:	92 e0       	ldi	r25, 0x02	; 2
 14a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 14e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 152:	8c e0       	ldi	r24, 0x0C	; 12
 154:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 158:	82 e0       	ldi	r24, 0x02	; 2
 15a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 15e:	cf 91       	pop	r28
 160:	08 95       	ret

00000162 <__vector_11>:
 162:	1f 92       	push	r1
 164:	0f 92       	push	r0
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	0f 92       	push	r0
 16a:	11 24       	eor	r1, r1
 16c:	2f 93       	push	r18
 16e:	3f 93       	push	r19
 170:	8f 93       	push	r24
 172:	9f 93       	push	r25
 174:	af 93       	push	r26
 176:	bf 93       	push	r27
 178:	ef 93       	push	r30
 17a:	ff 93       	push	r31
 17c:	e4 e0       	ldi	r30, 0x04	; 4
 17e:	f1 e0       	ldi	r31, 0x01	; 1
 180:	27 e2       	ldi	r18, 0x27	; 39
 182:	31 e0       	ldi	r19, 0x01	; 1
 184:	80 81       	ld	r24, Z
 186:	91 81       	ldd	r25, Z+1	; 0x01
 188:	89 2b       	or	r24, r25
 18a:	91 f0       	breq	.+36     	; 0x1b0 <__vector_11+0x4e>
 18c:	82 81       	ldd	r24, Z+2	; 0x02
 18e:	93 81       	ldd	r25, Z+3	; 0x03
 190:	00 97       	sbiw	r24, 0x00	; 0
 192:	59 f4       	brne	.+22     	; 0x1aa <__vector_11+0x48>
 194:	86 81       	ldd	r24, Z+6	; 0x06
 196:	8f 5f       	subi	r24, 0xFF	; 255
 198:	86 83       	std	Z+6, r24	; 0x06
 19a:	84 81       	ldd	r24, Z+4	; 0x04
 19c:	95 81       	ldd	r25, Z+5	; 0x05
 19e:	00 97       	sbiw	r24, 0x00	; 0
 1a0:	39 f0       	breq	.+14     	; 0x1b0 <__vector_11+0x4e>
 1a2:	01 97       	sbiw	r24, 0x01	; 1
 1a4:	93 83       	std	Z+3, r25	; 0x03
 1a6:	82 83       	std	Z+2, r24	; 0x02
 1a8:	03 c0       	rjmp	.+6      	; 0x1b0 <__vector_11+0x4e>
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	93 83       	std	Z+3, r25	; 0x03
 1ae:	82 83       	std	Z+2, r24	; 0x02
 1b0:	37 96       	adiw	r30, 0x07	; 7
 1b2:	e2 17       	cp	r30, r18
 1b4:	f3 07       	cpc	r31, r19
 1b6:	31 f7       	brne	.-52     	; 0x184 <__vector_11+0x22>
 1b8:	ff 91       	pop	r31
 1ba:	ef 91       	pop	r30
 1bc:	bf 91       	pop	r27
 1be:	af 91       	pop	r26
 1c0:	9f 91       	pop	r25
 1c2:	8f 91       	pop	r24
 1c4:	3f 91       	pop	r19
 1c6:	2f 91       	pop	r18
 1c8:	0f 90       	pop	r0
 1ca:	0f be       	out	0x3f, r0	; 63
 1cc:	0f 90       	pop	r0
 1ce:	1f 90       	pop	r1
 1d0:	18 95       	reti

000001d2 <init_ports>:
 1d2:	84 b1       	in	r24, 0x04	; 4
 1d4:	88 63       	ori	r24, 0x38	; 56
 1d6:	84 b9       	out	0x04, r24	; 4
 1d8:	84 b1       	in	r24, 0x04	; 4
 1da:	83 60       	ori	r24, 0x03	; 3
 1dc:	84 b9       	out	0x04, r24	; 4
 1de:	54 9a       	sbi	0x0a, 4	; 10
 1e0:	53 98       	cbi	0x0a, 3	; 10
 1e2:	08 95       	ret

000001e4 <init_ext_int1>:
 1e4:	84 e0       	ldi	r24, 0x04	; 4
 1e6:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 1ea:	82 e0       	ldi	r24, 0x02	; 2
 1ec:	8d bb       	out	0x1d, r24	; 29
 1ee:	08 95       	ret

000001f0 <init_timer0>:
 1f0:	82 e0       	ldi	r24, 0x02	; 2
 1f2:	84 bd       	out	0x24, r24	; 36
 1f4:	15 bc       	out	0x25, r1	; 37
 1f6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
 1fa:	8f ef       	ldi	r24, 0xFF	; 255
 1fc:	87 bd       	out	0x27, r24	; 39
 1fe:	08 95       	ret

00000200 <init_uart>:
 200:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 204:	83 e3       	ldi	r24, 0x33	; 51
 206:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 20a:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 20e:	88 e1       	ldi	r24, 0x18	; 24
 210:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 214:	86 e0       	ldi	r24, 0x06	; 6
 216:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 21a:	08 95       	ret

0000021c <transmit>:
 21c:	e0 ec       	ldi	r30, 0xC0	; 192
 21e:	f0 e0       	ldi	r31, 0x00	; 0
 220:	90 81       	ld	r25, Z
 222:	95 ff       	sbrs	r25, 5
 224:	fd cf       	rjmp	.-6      	; 0x220 <transmit+0x4>
 226:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 22a:	08 95       	ret

0000022c <__vector_14>:
 22c:	1f 92       	push	r1
 22e:	0f 92       	push	r0
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	0f 92       	push	r0
 234:	11 24       	eor	r1, r1
 236:	8f 93       	push	r24
 238:	9f 93       	push	r25
 23a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <counter>
 23e:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <counter+0x1>
 242:	01 96       	adiw	r24, 0x01	; 1
 244:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <counter+0x1>
 248:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <counter>
 24c:	9f 91       	pop	r25
 24e:	8f 91       	pop	r24
 250:	0f 90       	pop	r0
 252:	0f be       	out	0x3f, r0	; 63
 254:	0f 90       	pop	r0
 256:	1f 90       	pop	r1
 258:	18 95       	reti

0000025a <start_timer>:
 25a:	16 bc       	out	0x26, r1	; 38
 25c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <counter+0x1>
 260:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <counter>
 264:	84 e0       	ldi	r24, 0x04	; 4
 266:	85 bd       	out	0x25, r24	; 37
 268:	08 95       	ret

0000026a <__vector_2>:
 26a:	1f 92       	push	r1
 26c:	0f 92       	push	r0
 26e:	0f b6       	in	r0, 0x3f	; 63
 270:	0f 92       	push	r0
 272:	11 24       	eor	r1, r1
 274:	2f 93       	push	r18
 276:	3f 93       	push	r19
 278:	4f 93       	push	r20
 27a:	5f 93       	push	r21
 27c:	6f 93       	push	r22
 27e:	7f 93       	push	r23
 280:	8f 93       	push	r24
 282:	9f 93       	push	r25
 284:	af 93       	push	r26
 286:	bf 93       	push	r27
 288:	ef 93       	push	r30
 28a:	ff 93       	push	r31
 28c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	28 2f       	mov	r18, r24
 294:	21 70       	andi	r18, 0x01	; 1
 296:	80 fd       	sbrc	r24, 0
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__data_end>
 29e:	21 11       	cpse	r18, r1
 2a0:	03 c0       	rjmp	.+6      	; 0x2a8 <__vector_2+0x3e>
 2a2:	0e 94 2d 01 	call	0x25a	; 0x25a <start_timer>
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <__vector_2+0x42>
 2a8:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <init_timer0>
 2ac:	ff 91       	pop	r31
 2ae:	ef 91       	pop	r30
 2b0:	bf 91       	pop	r27
 2b2:	af 91       	pop	r26
 2b4:	9f 91       	pop	r25
 2b6:	8f 91       	pop	r24
 2b8:	7f 91       	pop	r23
 2ba:	6f 91       	pop	r22
 2bc:	5f 91       	pop	r21
 2be:	4f 91       	pop	r20
 2c0:	3f 91       	pop	r19
 2c2:	2f 91       	pop	r18
 2c4:	0f 90       	pop	r0
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	0f 90       	pop	r0
 2ca:	1f 90       	pop	r1
 2cc:	18 95       	reti

000002ce <send_trigger>:
 2ce:	2f ef       	ldi	r18, 0xFF	; 255
 2d0:	80 e7       	ldi	r24, 0x70	; 112
 2d2:	92 e0       	ldi	r25, 0x02	; 2
 2d4:	21 50       	subi	r18, 0x01	; 1
 2d6:	80 40       	sbci	r24, 0x00	; 0
 2d8:	90 40       	sbci	r25, 0x00	; 0
 2da:	e1 f7       	brne	.-8      	; 0x2d4 <send_trigger+0x6>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <send_trigger+0x10>
 2de:	00 00       	nop
 2e0:	5c 98       	cbi	0x0b, 4	; 11
 2e2:	25 e0       	ldi	r18, 0x05	; 5
 2e4:	2a 95       	dec	r18
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <send_trigger+0x16>
 2e8:	00 00       	nop
 2ea:	5c 9a       	sbi	0x0b, 4	; 11
 2ec:	85 e3       	ldi	r24, 0x35	; 53
 2ee:	8a 95       	dec	r24
 2f0:	f1 f7       	brne	.-4      	; 0x2ee <send_trigger+0x20>
 2f2:	00 00       	nop
 2f4:	5c 98       	cbi	0x0b, 4	; 11
 2f6:	08 95       	ret

000002f8 <calc_cm>:
 2f8:	96 b5       	in	r25, 0x26	; 38
 2fa:	20 e0       	ldi	r18, 0x00	; 0
 2fc:	30 e0       	ldi	r19, 0x00	; 0
 2fe:	38 2f       	mov	r19, r24
 300:	32 95       	swap	r19
 302:	30 7f       	andi	r19, 0xF0	; 240
 304:	29 0f       	add	r18, r25
 306:	31 1d       	adc	r19, r1
 308:	af e9       	ldi	r26, 0x9F	; 159
 30a:	b6 e4       	ldi	r27, 0x46	; 70
 30c:	0e 94 be 01 	call	0x37c	; 0x37c <__umulhisi3>
 310:	92 95       	swap	r25
 312:	82 95       	swap	r24
 314:	8f 70       	andi	r24, 0x0F	; 15
 316:	89 27       	eor	r24, r25
 318:	9f 70       	andi	r25, 0x0F	; 15
 31a:	89 27       	eor	r24, r25
 31c:	08 95       	ret

0000031e <main>:
}

int main()
{
	//init
    init_ports();
 31e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <init_ports>
    init_uart();
 322:	0e 94 00 01 	call	0x200	; 0x200 <init_uart>
    init_ext_int1();
 326:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <init_ext_int1>
    init_timer0();
 32a:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <init_timer0>
	scheduler_init_timer1();
 32e:	0e 94 9b 00 	call	0x136	; 0x136 <scheduler_init_timer1>
    // tasks
    scheduler_add_task(turn_on_red_led,0,400);
 332:	40 e9       	ldi	r20, 0x90	; 144
 334:	51 e0       	ldi	r21, 0x01	; 1
 336:	60 e0       	ldi	r22, 0x00	; 0
 338:	70 e0       	ldi	r23, 0x00	; 0
 33a:	83 e5       	ldi	r24, 0x53	; 83
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	0e 94 57 00 	call	0xae	; 0xae <scheduler_add_task>
    scheduler_add_task(turn_off_red_led,200,400);
 342:	40 e9       	ldi	r20, 0x90	; 144
 344:	51 e0       	ldi	r21, 0x01	; 1
 346:	68 ec       	ldi	r22, 0xC8	; 200
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	85 e5       	ldi	r24, 0x55	; 85
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 57 00 	call	0xae	; 0xae <scheduler_add_task>

*/

void scheduler_start(void)
{
      sei();
 352:	78 94       	sei
    scheduler_add_task(turn_off_red_led,200,400);
    // start de scheduler
	scheduler_start();
	while (1) {
		//scheduler_dispatch_tasks();
        send_trigger();
 354:	0e 94 67 01 	call	0x2ce	; 0x2ce <send_trigger>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 358:	2f ef       	ldi	r18, 0xFF	; 255
 35a:	83 ed       	ldi	r24, 0xD3	; 211
 35c:	90 e3       	ldi	r25, 0x30	; 48
 35e:	21 50       	subi	r18, 0x01	; 1
 360:	80 40       	sbci	r24, 0x00	; 0
 362:	90 40       	sbci	r25, 0x00	; 0
 364:	e1 f7       	brne	.-8      	; 0x35e <main+0x40>
 366:	00 c0       	rjmp	.+0      	; 0x368 <main+0x4a>
 368:	00 00       	nop
		_delay_ms(1000);
		uint8_t distance = calc_cm(counter);
 36a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <counter>
 36e:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <counter+0x1>
 372:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <calc_cm>
		transmit(distance);
 376:	0e 94 0e 01 	call	0x21c	; 0x21c <transmit>
 37a:	ec cf       	rjmp	.-40     	; 0x354 <main+0x36>

0000037c <__umulhisi3>:
 37c:	a2 9f       	mul	r26, r18
 37e:	b0 01       	movw	r22, r0
 380:	b3 9f       	mul	r27, r19
 382:	c0 01       	movw	r24, r0
 384:	a3 9f       	mul	r26, r19
 386:	70 0d       	add	r23, r0
 388:	81 1d       	adc	r24, r1
 38a:	11 24       	eor	r1, r1
 38c:	91 1d       	adc	r25, r1
 38e:	b2 9f       	mul	r27, r18
 390:	70 0d       	add	r23, r0
 392:	81 1d       	adc	r24, r1
 394:	11 24       	eor	r1, r1
 396:	91 1d       	adc	r25, r1
 398:	08 95       	ret

0000039a <_exit>:
 39a:	f8 94       	cli

0000039c <__stop_program>:
 39c:	ff cf       	rjmp	.-2      	; 0x39c <__stop_program>
