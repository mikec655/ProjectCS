
Temperatuursensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000672  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005fe  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  00800100  00800100  00000672  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000672  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  000006e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009f9  00000000  00000000  0000076c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e6  00000000  00000000  00001165  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047e  00000000  00000000  0000194b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00001dcc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ac  00000000  00000000  00001f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000308  00000000  00000000  000023d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000026e0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__vector_11>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 32       	cpi	r26, 0x24	; 36
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 52 01 	call	0x2a4	; 0x2a4 <main>
  88:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <scheduler_add_task>:
{
	// wacht totdat er data op de recieve buffer wordt gezet 
    // RXC0 wordt gezet wanneer de er data in de recieve buffer staat
    loop_until_bit_is_set(UCSR0A, RXC0);
	return UDR0;
}
  90:	0f 93       	push	r16
  92:	1f 93       	push	r17
  94:	cf 93       	push	r28
  96:	df 93       	push	r29
  98:	8c 01       	movw	r16, r24
  9a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  9e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  a2:	89 2b       	or	r24, r25
  a4:	81 f0       	breq	.+32     	; 0xc6 <scheduler_add_task+0x36>
  a6:	e0 e0       	ldi	r30, 0x00	; 0
  a8:	f1 e0       	ldi	r31, 0x01	; 1
  aa:	21 e0       	ldi	r18, 0x01	; 1
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	82 2f       	mov	r24, r18
  b0:	e9 01       	movw	r28, r18
  b2:	a7 81       	ldd	r26, Z+7	; 0x07
  b4:	b0 85       	ldd	r27, Z+8	; 0x08
  b6:	2f 5f       	subi	r18, 0xFF	; 255
  b8:	3f 4f       	sbci	r19, 0xFF	; 255
  ba:	37 96       	adiw	r30, 0x07	; 7
  bc:	ab 2b       	or	r26, r27
  be:	b9 f7       	brne	.-18     	; 0xae <scheduler_add_task+0x1e>
  c0:	85 30       	cpi	r24, 0x05	; 5
  c2:	21 f4       	brne	.+8      	; 0xcc <scheduler_add_task+0x3c>
  c4:	15 c0       	rjmp	.+42     	; 0xf0 <scheduler_add_task+0x60>
  c6:	c0 e0       	ldi	r28, 0x00	; 0
  c8:	d0 e0       	ldi	r29, 0x00	; 0
  ca:	80 e0       	ldi	r24, 0x00	; 0
  cc:	fe 01       	movw	r30, r28
  ce:	ee 0f       	add	r30, r30
  d0:	ff 1f       	adc	r31, r31
  d2:	ee 0f       	add	r30, r30
  d4:	ff 1f       	adc	r31, r31
  d6:	ee 0f       	add	r30, r30
  d8:	ff 1f       	adc	r31, r31
  da:	ec 1b       	sub	r30, r28
  dc:	fd 0b       	sbc	r31, r29
  de:	e0 50       	subi	r30, 0x00	; 0
  e0:	ff 4f       	sbci	r31, 0xFF	; 255
  e2:	11 83       	std	Z+1, r17	; 0x01
  e4:	00 83       	st	Z, r16
  e6:	73 83       	std	Z+3, r23	; 0x03
  e8:	62 83       	std	Z+2, r22	; 0x02
  ea:	55 83       	std	Z+5, r21	; 0x05
  ec:	44 83       	std	Z+4, r20	; 0x04
  ee:	16 82       	std	Z+6, r1	; 0x06
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	1f 91       	pop	r17
  f6:	0f 91       	pop	r16
  f8:	08 95       	ret

000000fa <scheduler_delete_task>:
  fa:	27 e0       	ldi	r18, 0x07	; 7
  fc:	82 9f       	mul	r24, r18
  fe:	c0 01       	movw	r24, r0
 100:	11 24       	eor	r1, r1
 102:	fc 01       	movw	r30, r24
 104:	e0 50       	subi	r30, 0x00	; 0
 106:	ff 4f       	sbci	r31, 0xFF	; 255
 108:	11 82       	std	Z+1, r1	; 0x01
 10a:	10 82       	st	Z, r1
 10c:	13 82       	std	Z+3, r1	; 0x03
 10e:	12 82       	std	Z+2, r1	; 0x02
 110:	15 82       	std	Z+5, r1	; 0x05
 112:	14 82       	std	Z+4, r1	; 0x04
 114:	16 82       	std	Z+6, r1	; 0x06
 116:	08 95       	ret

00000118 <scheduler_dispatch_tasks>:
 118:	ef 92       	push	r14
 11a:	ff 92       	push	r15
 11c:	1f 93       	push	r17
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	c0 e0       	ldi	r28, 0x00	; 0
 124:	d1 e0       	ldi	r29, 0x01	; 1
 126:	10 e0       	ldi	r17, 0x00	; 0
 128:	8e 81       	ldd	r24, Y+6	; 0x06
 12a:	88 23       	and	r24, r24
 12c:	79 f0       	breq	.+30     	; 0x14c <scheduler_dispatch_tasks+0x34>
 12e:	e8 81       	ld	r30, Y
 130:	f9 81       	ldd	r31, Y+1	; 0x01
 132:	30 97       	sbiw	r30, 0x00	; 0
 134:	59 f0       	breq	.+22     	; 0x14c <scheduler_dispatch_tasks+0x34>
 136:	09 95       	icall
 138:	8e 81       	ldd	r24, Y+6	; 0x06
 13a:	81 50       	subi	r24, 0x01	; 1
 13c:	8e 83       	std	Y+6, r24	; 0x06
 13e:	8c 81       	ldd	r24, Y+4	; 0x04
 140:	9d 81       	ldd	r25, Y+5	; 0x05
 142:	89 2b       	or	r24, r25
 144:	19 f4       	brne	.+6      	; 0x14c <scheduler_dispatch_tasks+0x34>
 146:	81 2f       	mov	r24, r17
 148:	0e 94 7d 00 	call	0xfa	; 0xfa <scheduler_delete_task>
 14c:	1f 5f       	subi	r17, 0xFF	; 255
 14e:	27 96       	adiw	r28, 0x07	; 7
 150:	15 30       	cpi	r17, 0x05	; 5
 152:	51 f7       	brne	.-44     	; 0x128 <scheduler_dispatch_tasks+0x10>
 154:	df 91       	pop	r29
 156:	cf 91       	pop	r28
 158:	1f 91       	pop	r17
 15a:	ff 90       	pop	r15
 15c:	ef 90       	pop	r14
 15e:	08 95       	ret

00000160 <scheduler_init_timer1>:
 160:	cf 93       	push	r28
 162:	c0 e0       	ldi	r28, 0x00	; 0
 164:	8c 2f       	mov	r24, r28
 166:	0e 94 7d 00 	call	0xfa	; 0xfa <scheduler_delete_task>
 16a:	cf 5f       	subi	r28, 0xFF	; 255
 16c:	c5 30       	cpi	r28, 0x05	; 5
 16e:	d1 f7       	brne	.-12     	; 0x164 <scheduler_init_timer1+0x4>
 170:	81 e7       	ldi	r24, 0x71	; 113
 172:	92 e0       	ldi	r25, 0x02	; 2
 174:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 178:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 17c:	8c e0       	ldi	r24, 0x0C	; 12
 17e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 182:	82 e0       	ldi	r24, 0x02	; 2
 184:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <__vector_11>:
 18c:	1f 92       	push	r1
 18e:	0f 92       	push	r0
 190:	0f b6       	in	r0, 0x3f	; 63
 192:	0f 92       	push	r0
 194:	11 24       	eor	r1, r1
 196:	2f 93       	push	r18
 198:	3f 93       	push	r19
 19a:	8f 93       	push	r24
 19c:	9f 93       	push	r25
 19e:	af 93       	push	r26
 1a0:	bf 93       	push	r27
 1a2:	ef 93       	push	r30
 1a4:	ff 93       	push	r31
 1a6:	e0 e0       	ldi	r30, 0x00	; 0
 1a8:	f1 e0       	ldi	r31, 0x01	; 1
 1aa:	23 e2       	ldi	r18, 0x23	; 35
 1ac:	31 e0       	ldi	r19, 0x01	; 1
 1ae:	80 81       	ld	r24, Z
 1b0:	91 81       	ldd	r25, Z+1	; 0x01
 1b2:	89 2b       	or	r24, r25
 1b4:	91 f0       	breq	.+36     	; 0x1da <__vector_11+0x4e>
 1b6:	82 81       	ldd	r24, Z+2	; 0x02
 1b8:	93 81       	ldd	r25, Z+3	; 0x03
 1ba:	00 97       	sbiw	r24, 0x00	; 0
 1bc:	59 f4       	brne	.+22     	; 0x1d4 <__vector_11+0x48>
 1be:	86 81       	ldd	r24, Z+6	; 0x06
 1c0:	8f 5f       	subi	r24, 0xFF	; 255
 1c2:	86 83       	std	Z+6, r24	; 0x06
 1c4:	84 81       	ldd	r24, Z+4	; 0x04
 1c6:	95 81       	ldd	r25, Z+5	; 0x05
 1c8:	00 97       	sbiw	r24, 0x00	; 0
 1ca:	39 f0       	breq	.+14     	; 0x1da <__vector_11+0x4e>
 1cc:	01 97       	sbiw	r24, 0x01	; 1
 1ce:	93 83       	std	Z+3, r25	; 0x03
 1d0:	82 83       	std	Z+2, r24	; 0x02
 1d2:	03 c0       	rjmp	.+6      	; 0x1da <__vector_11+0x4e>
 1d4:	01 97       	sbiw	r24, 0x01	; 1
 1d6:	93 83       	std	Z+3, r25	; 0x03
 1d8:	82 83       	std	Z+2, r24	; 0x02
 1da:	37 96       	adiw	r30, 0x07	; 7
 1dc:	e2 17       	cp	r30, r18
 1de:	f3 07       	cpc	r31, r19
 1e0:	31 f7       	brne	.-52     	; 0x1ae <__vector_11+0x22>
 1e2:	ff 91       	pop	r31
 1e4:	ef 91       	pop	r30
 1e6:	bf 91       	pop	r27
 1e8:	af 91       	pop	r26
 1ea:	9f 91       	pop	r25
 1ec:	8f 91       	pop	r24
 1ee:	3f 91       	pop	r19
 1f0:	2f 91       	pop	r18
 1f2:	0f 90       	pop	r0
 1f4:	0f be       	out	0x3f, r0	; 63
 1f6:	0f 90       	pop	r0
 1f8:	1f 90       	pop	r1
 1fa:	18 95       	reti

000001fc <init_ports>:
 1fc:	38 98       	cbi	0x07, 0	; 7
 1fe:	08 95       	ret

00000200 <init_uart>:
 200:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 204:	83 e3       	ldi	r24, 0x33	; 51
 206:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 20a:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 20e:	88 e1       	ldi	r24, 0x18	; 24
 210:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 214:	86 e0       	ldi	r24, 0x06	; 6
 216:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 21a:	08 95       	ret

0000021c <init_adc>:
 21c:	80 e6       	ldi	r24, 0x60	; 96
 21e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 222:	87 e8       	ldi	r24, 0x87	; 135
 224:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 228:	08 95       	ret

0000022a <transmit>:
 22a:	e0 ec       	ldi	r30, 0xC0	; 192
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	90 81       	ld	r25, Z
 230:	95 ff       	sbrs	r25, 5
 232:	fd cf       	rjmp	.-6      	; 0x22e <transmit+0x4>
 234:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 238:	08 95       	ret

0000023a <get_adc_value>:

//sensor functies
uint8_t get_adc_value()
{
	ADCSRA |= (1<<ADSC); // start conversion
 23a:	ea e7       	ldi	r30, 0x7A	; 122
 23c:	f0 e0       	ldi	r31, 0x00	; 0
 23e:	80 81       	ld	r24, Z
 240:	80 64       	ori	r24, 0x40	; 64
 242:	80 83       	st	Z, r24
	loop_until_bit_is_clear(ADCSRA, ADSC);
 244:	80 81       	ld	r24, Z
 246:	86 fd       	sbrc	r24, 6
 248:	fd cf       	rjmp	.-6      	; 0x244 <get_adc_value+0xa>
	return ADCH * 4 + ADCL / 64; // 8-bit resolution, left adjusted
 24a:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 24e:	90 91 78 00 	lds	r25, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 252:	22 0f       	add	r18, r18
 254:	22 0f       	add	r18, r18
 256:	89 2f       	mov	r24, r25
 258:	82 95       	swap	r24
 25a:	86 95       	lsr	r24
 25c:	86 95       	lsr	r24
 25e:	83 70       	andi	r24, 0x03	; 3
}
 260:	82 0f       	add	r24, r18
 262:	08 95       	ret

00000264 <transmit_sensor_value>:


void transmit_sensor_value()
{
    // rekent waarde om naar graden celsius
    uint16_t value = get_adc_value();
 264:	0e 94 1d 01 	call	0x23a	; 0x23a <get_adc_value>
    float v_out = (float) value * (5.0 / 1024.0);
    uint8_t celsius = (uint8_t) ((v_out - 0.5) * 100.0);
    // verstuurt waarde over serial
    transmit(celsius);
 268:	68 2f       	mov	r22, r24
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 02 02 	call	0x404	; 0x404 <__floatunsisf>
 274:	20 e0       	ldi	r18, 0x00	; 0
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	40 ea       	ldi	r20, 0xA0	; 160
 27a:	5b e3       	ldi	r21, 0x3B	; 59
 27c:	0e 94 90 02 	call	0x520	; 0x520 <__mulsf3>
 280:	20 e0       	ldi	r18, 0x00	; 0
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	40 e0       	ldi	r20, 0x00	; 0
 286:	5f e3       	ldi	r21, 0x3F	; 63
 288:	0e 94 66 01 	call	0x2cc	; 0x2cc <__subsf3>
 28c:	20 e0       	ldi	r18, 0x00	; 0
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	48 ec       	ldi	r20, 0xC8	; 200
 292:	52 e4       	ldi	r21, 0x42	; 66
 294:	0e 94 90 02 	call	0x520	; 0x520 <__mulsf3>
 298:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__fixunssfsi>
 29c:	86 2f       	mov	r24, r22
 29e:	0e 94 15 01 	call	0x22a	; 0x22a <transmit>
 2a2:	08 95       	ret

000002a4 <main>:
}

int main()
{
	//init
    init_ports();
 2a4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <init_ports>
    init_uart();
 2a8:	0e 94 00 01 	call	0x200	; 0x200 <init_uart>
    init_adc();
 2ac:	0e 94 0e 01 	call	0x21c	; 0x21c <init_adc>
	scheduler_init_timer1();
 2b0:	0e 94 b0 00 	call	0x160	; 0x160 <scheduler_init_timer1>
    // tasks
	//scheduler_add_task(,0,100);
    scheduler_add_task(transmit_sensor_value,0,500);
 2b4:	44 ef       	ldi	r20, 0xF4	; 244
 2b6:	51 e0       	ldi	r21, 0x01	; 1
 2b8:	60 e0       	ldi	r22, 0x00	; 0
 2ba:	70 e0       	ldi	r23, 0x00	; 0
 2bc:	82 e3       	ldi	r24, 0x32	; 50
 2be:	91 e0       	ldi	r25, 0x01	; 1
 2c0:	0e 94 48 00 	call	0x90	; 0x90 <scheduler_add_task>

*/

void scheduler_start(void)
{
      sei();
 2c4:	78 94       	sei
	//scheduler_add_task(,0,100);
    scheduler_add_task(transmit_sensor_value,0,500);
    // start de scheduler
	scheduler_start();
	while (1) {
		scheduler_dispatch_tasks();
 2c6:	0e 94 8c 00 	call	0x118	; 0x118 <scheduler_dispatch_tasks>
 2ca:	fd cf       	rjmp	.-6      	; 0x2c6 <main+0x22>

000002cc <__subsf3>:
 2cc:	50 58       	subi	r21, 0x80	; 128

000002ce <__addsf3>:
 2ce:	bb 27       	eor	r27, r27
 2d0:	aa 27       	eor	r26, r26
 2d2:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__addsf3x>
 2d6:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__fp_round>
 2da:	0e 94 48 02 	call	0x490	; 0x490 <__fp_pscA>
 2de:	38 f0       	brcs	.+14     	; 0x2ee <__addsf3+0x20>
 2e0:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_pscB>
 2e4:	20 f0       	brcs	.+8      	; 0x2ee <__addsf3+0x20>
 2e6:	39 f4       	brne	.+14     	; 0x2f6 <__addsf3+0x28>
 2e8:	9f 3f       	cpi	r25, 0xFF	; 255
 2ea:	19 f4       	brne	.+6      	; 0x2f2 <__addsf3+0x24>
 2ec:	26 f4       	brtc	.+8      	; 0x2f6 <__addsf3+0x28>
 2ee:	0c 94 45 02 	jmp	0x48a	; 0x48a <__fp_nan>
 2f2:	0e f4       	brtc	.+2      	; 0x2f6 <__addsf3+0x28>
 2f4:	e0 95       	com	r30
 2f6:	e7 fb       	bst	r30, 7
 2f8:	0c 94 3f 02 	jmp	0x47e	; 0x47e <__fp_inf>

000002fc <__addsf3x>:
 2fc:	e9 2f       	mov	r30, r25
 2fe:	0e 94 67 02 	call	0x4ce	; 0x4ce <__fp_split3>
 302:	58 f3       	brcs	.-42     	; 0x2da <__addsf3+0xc>
 304:	ba 17       	cp	r27, r26
 306:	62 07       	cpc	r22, r18
 308:	73 07       	cpc	r23, r19
 30a:	84 07       	cpc	r24, r20
 30c:	95 07       	cpc	r25, r21
 30e:	20 f0       	brcs	.+8      	; 0x318 <__addsf3x+0x1c>
 310:	79 f4       	brne	.+30     	; 0x330 <__addsf3x+0x34>
 312:	a6 f5       	brtc	.+104    	; 0x37c <__addsf3x+0x80>
 314:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_zero>
 318:	0e f4       	brtc	.+2      	; 0x31c <__addsf3x+0x20>
 31a:	e0 95       	com	r30
 31c:	0b 2e       	mov	r0, r27
 31e:	ba 2f       	mov	r27, r26
 320:	a0 2d       	mov	r26, r0
 322:	0b 01       	movw	r0, r22
 324:	b9 01       	movw	r22, r18
 326:	90 01       	movw	r18, r0
 328:	0c 01       	movw	r0, r24
 32a:	ca 01       	movw	r24, r20
 32c:	a0 01       	movw	r20, r0
 32e:	11 24       	eor	r1, r1
 330:	ff 27       	eor	r31, r31
 332:	59 1b       	sub	r21, r25
 334:	99 f0       	breq	.+38     	; 0x35c <__addsf3x+0x60>
 336:	59 3f       	cpi	r21, 0xF9	; 249
 338:	50 f4       	brcc	.+20     	; 0x34e <__addsf3x+0x52>
 33a:	50 3e       	cpi	r21, 0xE0	; 224
 33c:	68 f1       	brcs	.+90     	; 0x398 <__addsf3x+0x9c>
 33e:	1a 16       	cp	r1, r26
 340:	f0 40       	sbci	r31, 0x00	; 0
 342:	a2 2f       	mov	r26, r18
 344:	23 2f       	mov	r18, r19
 346:	34 2f       	mov	r19, r20
 348:	44 27       	eor	r20, r20
 34a:	58 5f       	subi	r21, 0xF8	; 248
 34c:	f3 cf       	rjmp	.-26     	; 0x334 <__addsf3x+0x38>
 34e:	46 95       	lsr	r20
 350:	37 95       	ror	r19
 352:	27 95       	ror	r18
 354:	a7 95       	ror	r26
 356:	f0 40       	sbci	r31, 0x00	; 0
 358:	53 95       	inc	r21
 35a:	c9 f7       	brne	.-14     	; 0x34e <__addsf3x+0x52>
 35c:	7e f4       	brtc	.+30     	; 0x37c <__addsf3x+0x80>
 35e:	1f 16       	cp	r1, r31
 360:	ba 0b       	sbc	r27, r26
 362:	62 0b       	sbc	r22, r18
 364:	73 0b       	sbc	r23, r19
 366:	84 0b       	sbc	r24, r20
 368:	ba f0       	brmi	.+46     	; 0x398 <__addsf3x+0x9c>
 36a:	91 50       	subi	r25, 0x01	; 1
 36c:	a1 f0       	breq	.+40     	; 0x396 <__addsf3x+0x9a>
 36e:	ff 0f       	add	r31, r31
 370:	bb 1f       	adc	r27, r27
 372:	66 1f       	adc	r22, r22
 374:	77 1f       	adc	r23, r23
 376:	88 1f       	adc	r24, r24
 378:	c2 f7       	brpl	.-16     	; 0x36a <__addsf3x+0x6e>
 37a:	0e c0       	rjmp	.+28     	; 0x398 <__addsf3x+0x9c>
 37c:	ba 0f       	add	r27, r26
 37e:	62 1f       	adc	r22, r18
 380:	73 1f       	adc	r23, r19
 382:	84 1f       	adc	r24, r20
 384:	48 f4       	brcc	.+18     	; 0x398 <__addsf3x+0x9c>
 386:	87 95       	ror	r24
 388:	77 95       	ror	r23
 38a:	67 95       	ror	r22
 38c:	b7 95       	ror	r27
 38e:	f7 95       	ror	r31
 390:	9e 3f       	cpi	r25, 0xFE	; 254
 392:	08 f0       	brcs	.+2      	; 0x396 <__addsf3x+0x9a>
 394:	b0 cf       	rjmp	.-160    	; 0x2f6 <__addsf3+0x28>
 396:	93 95       	inc	r25
 398:	88 0f       	add	r24, r24
 39a:	08 f0       	brcs	.+2      	; 0x39e <__addsf3x+0xa2>
 39c:	99 27       	eor	r25, r25
 39e:	ee 0f       	add	r30, r30
 3a0:	97 95       	ror	r25
 3a2:	87 95       	ror	r24
 3a4:	08 95       	ret

000003a6 <__fixunssfsi>:
 3a6:	0e 94 6f 02 	call	0x4de	; 0x4de <__fp_splitA>
 3aa:	88 f0       	brcs	.+34     	; 0x3ce <__fixunssfsi+0x28>
 3ac:	9f 57       	subi	r25, 0x7F	; 127
 3ae:	98 f0       	brcs	.+38     	; 0x3d6 <__fixunssfsi+0x30>
 3b0:	b9 2f       	mov	r27, r25
 3b2:	99 27       	eor	r25, r25
 3b4:	b7 51       	subi	r27, 0x17	; 23
 3b6:	b0 f0       	brcs	.+44     	; 0x3e4 <__fixunssfsi+0x3e>
 3b8:	e1 f0       	breq	.+56     	; 0x3f2 <__fixunssfsi+0x4c>
 3ba:	66 0f       	add	r22, r22
 3bc:	77 1f       	adc	r23, r23
 3be:	88 1f       	adc	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	1a f0       	brmi	.+6      	; 0x3ca <__fixunssfsi+0x24>
 3c4:	ba 95       	dec	r27
 3c6:	c9 f7       	brne	.-14     	; 0x3ba <__fixunssfsi+0x14>
 3c8:	14 c0       	rjmp	.+40     	; 0x3f2 <__fixunssfsi+0x4c>
 3ca:	b1 30       	cpi	r27, 0x01	; 1
 3cc:	91 f0       	breq	.+36     	; 0x3f2 <__fixunssfsi+0x4c>
 3ce:	0e 94 89 02 	call	0x512	; 0x512 <__fp_zero>
 3d2:	b1 e0       	ldi	r27, 0x01	; 1
 3d4:	08 95       	ret
 3d6:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_zero>
 3da:	67 2f       	mov	r22, r23
 3dc:	78 2f       	mov	r23, r24
 3de:	88 27       	eor	r24, r24
 3e0:	b8 5f       	subi	r27, 0xF8	; 248
 3e2:	39 f0       	breq	.+14     	; 0x3f2 <__fixunssfsi+0x4c>
 3e4:	b9 3f       	cpi	r27, 0xF9	; 249
 3e6:	cc f3       	brlt	.-14     	; 0x3da <__fixunssfsi+0x34>
 3e8:	86 95       	lsr	r24
 3ea:	77 95       	ror	r23
 3ec:	67 95       	ror	r22
 3ee:	b3 95       	inc	r27
 3f0:	d9 f7       	brne	.-10     	; 0x3e8 <__fixunssfsi+0x42>
 3f2:	3e f4       	brtc	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f4:	90 95       	com	r25
 3f6:	80 95       	com	r24
 3f8:	70 95       	com	r23
 3fa:	61 95       	neg	r22
 3fc:	7f 4f       	sbci	r23, 0xFF	; 255
 3fe:	8f 4f       	sbci	r24, 0xFF	; 255
 400:	9f 4f       	sbci	r25, 0xFF	; 255
 402:	08 95       	ret

00000404 <__floatunsisf>:
 404:	e8 94       	clt
 406:	09 c0       	rjmp	.+18     	; 0x41a <__floatsisf+0x12>

00000408 <__floatsisf>:
 408:	97 fb       	bst	r25, 7
 40a:	3e f4       	brtc	.+14     	; 0x41a <__floatsisf+0x12>
 40c:	90 95       	com	r25
 40e:	80 95       	com	r24
 410:	70 95       	com	r23
 412:	61 95       	neg	r22
 414:	7f 4f       	sbci	r23, 0xFF	; 255
 416:	8f 4f       	sbci	r24, 0xFF	; 255
 418:	9f 4f       	sbci	r25, 0xFF	; 255
 41a:	99 23       	and	r25, r25
 41c:	a9 f0       	breq	.+42     	; 0x448 <__floatsisf+0x40>
 41e:	f9 2f       	mov	r31, r25
 420:	96 e9       	ldi	r25, 0x96	; 150
 422:	bb 27       	eor	r27, r27
 424:	93 95       	inc	r25
 426:	f6 95       	lsr	r31
 428:	87 95       	ror	r24
 42a:	77 95       	ror	r23
 42c:	67 95       	ror	r22
 42e:	b7 95       	ror	r27
 430:	f1 11       	cpse	r31, r1
 432:	f8 cf       	rjmp	.-16     	; 0x424 <__floatsisf+0x1c>
 434:	fa f4       	brpl	.+62     	; 0x474 <__floatsisf+0x6c>
 436:	bb 0f       	add	r27, r27
 438:	11 f4       	brne	.+4      	; 0x43e <__floatsisf+0x36>
 43a:	60 ff       	sbrs	r22, 0
 43c:	1b c0       	rjmp	.+54     	; 0x474 <__floatsisf+0x6c>
 43e:	6f 5f       	subi	r22, 0xFF	; 255
 440:	7f 4f       	sbci	r23, 0xFF	; 255
 442:	8f 4f       	sbci	r24, 0xFF	; 255
 444:	9f 4f       	sbci	r25, 0xFF	; 255
 446:	16 c0       	rjmp	.+44     	; 0x474 <__floatsisf+0x6c>
 448:	88 23       	and	r24, r24
 44a:	11 f0       	breq	.+4      	; 0x450 <__floatsisf+0x48>
 44c:	96 e9       	ldi	r25, 0x96	; 150
 44e:	11 c0       	rjmp	.+34     	; 0x472 <__floatsisf+0x6a>
 450:	77 23       	and	r23, r23
 452:	21 f0       	breq	.+8      	; 0x45c <__floatsisf+0x54>
 454:	9e e8       	ldi	r25, 0x8E	; 142
 456:	87 2f       	mov	r24, r23
 458:	76 2f       	mov	r23, r22
 45a:	05 c0       	rjmp	.+10     	; 0x466 <__floatsisf+0x5e>
 45c:	66 23       	and	r22, r22
 45e:	71 f0       	breq	.+28     	; 0x47c <__floatsisf+0x74>
 460:	96 e8       	ldi	r25, 0x86	; 134
 462:	86 2f       	mov	r24, r22
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	60 e0       	ldi	r22, 0x00	; 0
 468:	2a f0       	brmi	.+10     	; 0x474 <__floatsisf+0x6c>
 46a:	9a 95       	dec	r25
 46c:	66 0f       	add	r22, r22
 46e:	77 1f       	adc	r23, r23
 470:	88 1f       	adc	r24, r24
 472:	da f7       	brpl	.-10     	; 0x46a <__floatsisf+0x62>
 474:	88 0f       	add	r24, r24
 476:	96 95       	lsr	r25
 478:	87 95       	ror	r24
 47a:	97 f9       	bld	r25, 7
 47c:	08 95       	ret

0000047e <__fp_inf>:
 47e:	97 f9       	bld	r25, 7
 480:	9f 67       	ori	r25, 0x7F	; 127
 482:	80 e8       	ldi	r24, 0x80	; 128
 484:	70 e0       	ldi	r23, 0x00	; 0
 486:	60 e0       	ldi	r22, 0x00	; 0
 488:	08 95       	ret

0000048a <__fp_nan>:
 48a:	9f ef       	ldi	r25, 0xFF	; 255
 48c:	80 ec       	ldi	r24, 0xC0	; 192
 48e:	08 95       	ret

00000490 <__fp_pscA>:
 490:	00 24       	eor	r0, r0
 492:	0a 94       	dec	r0
 494:	16 16       	cp	r1, r22
 496:	17 06       	cpc	r1, r23
 498:	18 06       	cpc	r1, r24
 49a:	09 06       	cpc	r0, r25
 49c:	08 95       	ret

0000049e <__fp_pscB>:
 49e:	00 24       	eor	r0, r0
 4a0:	0a 94       	dec	r0
 4a2:	12 16       	cp	r1, r18
 4a4:	13 06       	cpc	r1, r19
 4a6:	14 06       	cpc	r1, r20
 4a8:	05 06       	cpc	r0, r21
 4aa:	08 95       	ret

000004ac <__fp_round>:
 4ac:	09 2e       	mov	r0, r25
 4ae:	03 94       	inc	r0
 4b0:	00 0c       	add	r0, r0
 4b2:	11 f4       	brne	.+4      	; 0x4b8 <__fp_round+0xc>
 4b4:	88 23       	and	r24, r24
 4b6:	52 f0       	brmi	.+20     	; 0x4cc <__fp_round+0x20>
 4b8:	bb 0f       	add	r27, r27
 4ba:	40 f4       	brcc	.+16     	; 0x4cc <__fp_round+0x20>
 4bc:	bf 2b       	or	r27, r31
 4be:	11 f4       	brne	.+4      	; 0x4c4 <__fp_round+0x18>
 4c0:	60 ff       	sbrs	r22, 0
 4c2:	04 c0       	rjmp	.+8      	; 0x4cc <__fp_round+0x20>
 4c4:	6f 5f       	subi	r22, 0xFF	; 255
 4c6:	7f 4f       	sbci	r23, 0xFF	; 255
 4c8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ca:	9f 4f       	sbci	r25, 0xFF	; 255
 4cc:	08 95       	ret

000004ce <__fp_split3>:
 4ce:	57 fd       	sbrc	r21, 7
 4d0:	90 58       	subi	r25, 0x80	; 128
 4d2:	44 0f       	add	r20, r20
 4d4:	55 1f       	adc	r21, r21
 4d6:	59 f0       	breq	.+22     	; 0x4ee <__fp_splitA+0x10>
 4d8:	5f 3f       	cpi	r21, 0xFF	; 255
 4da:	71 f0       	breq	.+28     	; 0x4f8 <__fp_splitA+0x1a>
 4dc:	47 95       	ror	r20

000004de <__fp_splitA>:
 4de:	88 0f       	add	r24, r24
 4e0:	97 fb       	bst	r25, 7
 4e2:	99 1f       	adc	r25, r25
 4e4:	61 f0       	breq	.+24     	; 0x4fe <__fp_splitA+0x20>
 4e6:	9f 3f       	cpi	r25, 0xFF	; 255
 4e8:	79 f0       	breq	.+30     	; 0x508 <__fp_splitA+0x2a>
 4ea:	87 95       	ror	r24
 4ec:	08 95       	ret
 4ee:	12 16       	cp	r1, r18
 4f0:	13 06       	cpc	r1, r19
 4f2:	14 06       	cpc	r1, r20
 4f4:	55 1f       	adc	r21, r21
 4f6:	f2 cf       	rjmp	.-28     	; 0x4dc <__fp_split3+0xe>
 4f8:	46 95       	lsr	r20
 4fa:	f1 df       	rcall	.-30     	; 0x4de <__fp_splitA>
 4fc:	08 c0       	rjmp	.+16     	; 0x50e <__fp_splitA+0x30>
 4fe:	16 16       	cp	r1, r22
 500:	17 06       	cpc	r1, r23
 502:	18 06       	cpc	r1, r24
 504:	99 1f       	adc	r25, r25
 506:	f1 cf       	rjmp	.-30     	; 0x4ea <__fp_splitA+0xc>
 508:	86 95       	lsr	r24
 50a:	71 05       	cpc	r23, r1
 50c:	61 05       	cpc	r22, r1
 50e:	08 94       	sec
 510:	08 95       	ret

00000512 <__fp_zero>:
 512:	e8 94       	clt

00000514 <__fp_szero>:
 514:	bb 27       	eor	r27, r27
 516:	66 27       	eor	r22, r22
 518:	77 27       	eor	r23, r23
 51a:	cb 01       	movw	r24, r22
 51c:	97 f9       	bld	r25, 7
 51e:	08 95       	ret

00000520 <__mulsf3>:
 520:	0e 94 a3 02 	call	0x546	; 0x546 <__mulsf3x>
 524:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <__fp_round>
 528:	0e 94 48 02 	call	0x490	; 0x490 <__fp_pscA>
 52c:	38 f0       	brcs	.+14     	; 0x53c <__mulsf3+0x1c>
 52e:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_pscB>
 532:	20 f0       	brcs	.+8      	; 0x53c <__mulsf3+0x1c>
 534:	95 23       	and	r25, r21
 536:	11 f0       	breq	.+4      	; 0x53c <__mulsf3+0x1c>
 538:	0c 94 3f 02 	jmp	0x47e	; 0x47e <__fp_inf>
 53c:	0c 94 45 02 	jmp	0x48a	; 0x48a <__fp_nan>
 540:	11 24       	eor	r1, r1
 542:	0c 94 8a 02 	jmp	0x514	; 0x514 <__fp_szero>

00000546 <__mulsf3x>:
 546:	0e 94 67 02 	call	0x4ce	; 0x4ce <__fp_split3>
 54a:	70 f3       	brcs	.-36     	; 0x528 <__mulsf3+0x8>

0000054c <__mulsf3_pse>:
 54c:	95 9f       	mul	r25, r21
 54e:	c1 f3       	breq	.-16     	; 0x540 <__mulsf3+0x20>
 550:	95 0f       	add	r25, r21
 552:	50 e0       	ldi	r21, 0x00	; 0
 554:	55 1f       	adc	r21, r21
 556:	62 9f       	mul	r22, r18
 558:	f0 01       	movw	r30, r0
 55a:	72 9f       	mul	r23, r18
 55c:	bb 27       	eor	r27, r27
 55e:	f0 0d       	add	r31, r0
 560:	b1 1d       	adc	r27, r1
 562:	63 9f       	mul	r22, r19
 564:	aa 27       	eor	r26, r26
 566:	f0 0d       	add	r31, r0
 568:	b1 1d       	adc	r27, r1
 56a:	aa 1f       	adc	r26, r26
 56c:	64 9f       	mul	r22, r20
 56e:	66 27       	eor	r22, r22
 570:	b0 0d       	add	r27, r0
 572:	a1 1d       	adc	r26, r1
 574:	66 1f       	adc	r22, r22
 576:	82 9f       	mul	r24, r18
 578:	22 27       	eor	r18, r18
 57a:	b0 0d       	add	r27, r0
 57c:	a1 1d       	adc	r26, r1
 57e:	62 1f       	adc	r22, r18
 580:	73 9f       	mul	r23, r19
 582:	b0 0d       	add	r27, r0
 584:	a1 1d       	adc	r26, r1
 586:	62 1f       	adc	r22, r18
 588:	83 9f       	mul	r24, r19
 58a:	a0 0d       	add	r26, r0
 58c:	61 1d       	adc	r22, r1
 58e:	22 1f       	adc	r18, r18
 590:	74 9f       	mul	r23, r20
 592:	33 27       	eor	r19, r19
 594:	a0 0d       	add	r26, r0
 596:	61 1d       	adc	r22, r1
 598:	23 1f       	adc	r18, r19
 59a:	84 9f       	mul	r24, r20
 59c:	60 0d       	add	r22, r0
 59e:	21 1d       	adc	r18, r1
 5a0:	82 2f       	mov	r24, r18
 5a2:	76 2f       	mov	r23, r22
 5a4:	6a 2f       	mov	r22, r26
 5a6:	11 24       	eor	r1, r1
 5a8:	9f 57       	subi	r25, 0x7F	; 127
 5aa:	50 40       	sbci	r21, 0x00	; 0
 5ac:	9a f0       	brmi	.+38     	; 0x5d4 <__mulsf3_pse+0x88>
 5ae:	f1 f0       	breq	.+60     	; 0x5ec <__mulsf3_pse+0xa0>
 5b0:	88 23       	and	r24, r24
 5b2:	4a f0       	brmi	.+18     	; 0x5c6 <__mulsf3_pse+0x7a>
 5b4:	ee 0f       	add	r30, r30
 5b6:	ff 1f       	adc	r31, r31
 5b8:	bb 1f       	adc	r27, r27
 5ba:	66 1f       	adc	r22, r22
 5bc:	77 1f       	adc	r23, r23
 5be:	88 1f       	adc	r24, r24
 5c0:	91 50       	subi	r25, 0x01	; 1
 5c2:	50 40       	sbci	r21, 0x00	; 0
 5c4:	a9 f7       	brne	.-22     	; 0x5b0 <__mulsf3_pse+0x64>
 5c6:	9e 3f       	cpi	r25, 0xFE	; 254
 5c8:	51 05       	cpc	r21, r1
 5ca:	80 f0       	brcs	.+32     	; 0x5ec <__mulsf3_pse+0xa0>
 5cc:	0c 94 3f 02 	jmp	0x47e	; 0x47e <__fp_inf>
 5d0:	0c 94 8a 02 	jmp	0x514	; 0x514 <__fp_szero>
 5d4:	5f 3f       	cpi	r21, 0xFF	; 255
 5d6:	e4 f3       	brlt	.-8      	; 0x5d0 <__mulsf3_pse+0x84>
 5d8:	98 3e       	cpi	r25, 0xE8	; 232
 5da:	d4 f3       	brlt	.-12     	; 0x5d0 <__mulsf3_pse+0x84>
 5dc:	86 95       	lsr	r24
 5de:	77 95       	ror	r23
 5e0:	67 95       	ror	r22
 5e2:	b7 95       	ror	r27
 5e4:	f7 95       	ror	r31
 5e6:	e7 95       	ror	r30
 5e8:	9f 5f       	subi	r25, 0xFF	; 255
 5ea:	c1 f7       	brne	.-16     	; 0x5dc <__mulsf3_pse+0x90>
 5ec:	fe 2b       	or	r31, r30
 5ee:	88 0f       	add	r24, r24
 5f0:	91 1d       	adc	r25, r1
 5f2:	96 95       	lsr	r25
 5f4:	87 95       	ror	r24
 5f6:	97 f9       	bld	r25, 7
 5f8:	08 95       	ret

000005fa <_exit>:
 5fa:	f8 94       	cli

000005fc <__stop_program>:
 5fc:	ff cf       	rjmp	.-2      	; 0x5fc <__stop_program>
